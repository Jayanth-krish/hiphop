#* Generated file, don't edit
#*=====================================================================*/
#*    serrano/prgm/project/hiphop/hiphop/Makefile.in                   */
#*    -------------------------------------------------------------    */
#*    Author      :  Manuel Serrano                                    */
#*    Creation    :  Fri Jan 20 14:35:57 2006                          */
#*    Last change :  Sun Jun 16 06:14:27 2024 (serrano)                */
#*    Copyright   :  2006-24 Manuel Serrano                            */
#*    -------------------------------------------------------------    */
#*    Generic Makefile to build Hop weblets.                           */
#*=====================================================================*/
## run "make" to build the .hz file

#*---------------------------------------------------------------------*/
#*    Weblet description                                               */
#*---------------------------------------------------------------------*/
HZ=@HZ@
HZVERSION=@VERSION@
DATE="@DATE@"

CATEGORY=programming
LICENSE=@LICENSE@

LIBDIR=@LIBDIR@
HOPREPOSITORY=@HOPREPOSITORY@
HOPLIBDIR=@HOPLIBDIR@
HOPVERSION=@HOPVERSION@
HOPBUILDTAG=@HOPBUILDTAG@
HOPBUILDARCH=@HOPBUILDARCH@
HOPSODIR=@SODIR@
HOPSHAREDIR=@HOPSHAREDIR@

HIPHOPBUILDID=@HIPHOPBUILDID@

HIPHOPLIBDIR=$(LIBDIR)/$(HZ)/$(HZVERSION)
HIPHOPNPMDIR=hiphop-$(HZVERSION)-$(HIPHOPBUILDID)

HOP=@HOP@
HOPC=@HOPC@
HFLAGS=@HFLAGS@
HHC=bin/hhc.sh --js-require-hop

LIB=ast.js batch.js compiler.js compiler-utils.js debugger-common.js \
 debugger.js debugger-server.js debug.js error.js hiphop.js lang.js \
 machine.js net.js queue.js signal.js sweep.js causality.js

PREPROCESSOR=astutils.js parser.js hhaccess.js

ULIB=parallelmap.js

MODULES=interval.hh.js http.hh.js promise.hh.js timeout.hh.js

SOFILES=$(LIB:%.js=lib/$(HOPSODIR)/%.@SO@) \
  $(PREPROCESSOR:%.js=preprocessor/$(HOPSODIR)/%.@SO@) \
  $(MODULES:%=modules/%)

SODIR=@SODIR@
JSDIR=$(LIBDIR)/$(HZVERSION)

MODFILE=a+r
MODEXE=a+rx
MODDIR=a+rx

#*---------------------------------------------------------------------*/
#*    do                                                               */
#*---------------------------------------------------------------------*/
.PHONY: do so

do: lib/$(HOPSODIR) preprocessor/$(HOPSODIR)
	$(MAKE) so

so: $(SOFILES) lib/$(HOPSODIR)/config.@SO@ ChangeLog
	@ echo "Compilation complete."

#*---------------------------------------------------------------------*/
#*    npm                                                              */
#*---------------------------------------------------------------------*/
.PHONY: npm

npm-hiphop:
	mkdir -p npm/$(HIPHOPNPMDIR)
	mkdir -p npm/$(HIPHOPNPMDIR)/lib
	mkdir -p npm/$(HIPHOPNPMDIR)/bin
	mkdir -p npm/$(HIPHOPNPMDIR)/etc
	mkdir -p npm/$(HIPHOPNPMDIR)/modules
	cp package.json npm/$(HIPHOPNPMDIR)
	cp -r lib npm/$(HIPHOPNPMDIR)
	mv npm/$(HIPHOPNPMDIR)/lib/hiphop-client.mjs npm/$(HIPHOPNPMDIR)
	cp -r preprocessor npm/$(HIPHOPNPMDIR)
	cp -r modules/*.js npm/$(HIPHOPNPMDIR)/modules
	cp -r modules/*.d.ts npm/$(HIPHOPNPMDIR)/modules
	cp -r test npm/$(HIPHOPNPMDIR)
	cp -r etc/configure.js npm/$(HIPHOPNPMDIR)/etc
	cp -r etc/buildmodules.js npm/$(HIPHOPNPMDIR)/etc
	echo "#!/usr/bin/env node" > npm/$(HIPHOPNPMDIR)/bin/hhc.mjs
	echo "import * as hhc from \"../lib/hhc.js\"" >> npm/$(HIPHOPNPMDIR)/bin/hhc.mjs
	chmod a+rx npm/$(HIPHOPNPMDIR)/bin/hhc.mjs
	cp tools/nets2dot.mjs npm/$(HIPHOPNPMDIR)/bin/nets2dot.mjs
	chmod a+rx npm/$(HIPHOPNPMDIR)/bin/nets2dot.mjs
	(cd npm; tar --exclude="*.so" -zcf $(HIPHOPNPMDIR).tgz $(HIPHOPNPMDIR))

npm-hiphop-tutorial-async:
	mkdir -p npm
	cp -r tutorials/hiphop-tutorial-async npm/hiphop-tutorial-async-$(HZVERSION)-$(HIPHOPBUILDID)
	(cd npm; tar --exclude="*.so" -zcf hiphop-tutorial-async-$(HZVERSION)-$(HIPHOPBUILDID).tgz hiphop-tutorial-async-$(HZVERSION)-$(HIPHOPBUILDID))

npm-sans-rm: npm-hiphop npm-hiphop-tutorial-async

npm: npm-sans-rm 
	(cd npm; rm -rf $(HIPHOPNPMDIR))

#*---------------------------------------------------------------------*/
#*    .suffixes                                                        */
#*---------------------------------------------------------------------*/
.SUFFIXES:
.SUFFIXES: .js .hop .@SO@

#*---------------------------------------------------------------------*/
#*    The implicit rules                                               */
#*---------------------------------------------------------------------*/
lib/$(HOPSODIR)/%.@SO@: lib/%.js
	$(HOPC) $(HFLAGS) -y -o $@ $<

preprocessor/$(HOPSODIR)/%.@SO@: preprocessor/%.js
	$(HOPC) $(HFLAGS) -y -o $@ $<

$(MODULES:%.js=modules/%.@SO@): modules/node_modules/@hop/hiphop \
  $(LIB:%.js=lib/%.@SO@)

modules/node_modules/@hop/hiphop: modules/node_modules/@hop
	(hiphop=`basename $$PWD`; cd modules/node_modules/@hop; ln -s ../../../../$$hiphop hiphop)

modules/node_modules/@hop: modules/node_modules
	mkdir -p $@

modules/node_modules: modules
	mkdir -p $@

modules:
	mkdir -p $@

lib/$(HOPSODIR):
	mkdir -p $@

preprocessor/$(HOPSODIR):
	mkdir -p $@

#*---------------------------------------------------------------------*/
#*    install                                                          */
#*---------------------------------------------------------------------*/
.PHONY: install

install:
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)
	# lib
	cp -r lib $(DESTDIR)$(HIPHOPLIBDIR)
	chmod $(MODDIR) $(DESTDIR)$(HIPHOPLIBDIR)/lib
	chmod $(MODFILE) $(DESTDIR)$(HIPHOPLIBDIR)/lib/*.js
	chmod -R $(MODDIR) $(DESTDIR)$(HIPHOPLIBDIR)/lib/so
	chmod $(MODEXE) $(DESTDIR)$(HIPHOPLIBDIR)/lib/$(HOPSODIR)/*.so
	# preprocessor
	cp -r preprocessor $(DESTDIR)$(HIPHOPLIBDIR)
	chmod $(MODDIR) $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor
	chmod $(MODFILE) $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor/*.js
	chmod -R $(MODDIR) $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor/so
	chmod $(MODEXE) $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor/$(HOPSODIR)/*.so
	# test
	cp -r test $(DESTDIR)$(HIPHOPLIBDIR)
	chmod $(MODDIR) $(DESTDIR)$(HIPHOPLIBDIR)/test
	# package.json
	cp package.json $(DESTDIR)$(HIPHOPLIBDIR)
	chmod $(MODFILE) $(DESTDIR)$(HIPHOPLIBDIR)/package.json

install-sans-so: install-js install-sitelisp
	$(MAKE) install-hop

install-hop: 
	cd $(DESTDIR)$(HOPLIBDIR)/hop/$(HOPVERSION)/node_modules/@hop; \
	rm -f $(HZ); \
	ln -s $(DESTDIR)$(LIBDIR)/$(HZ)/$(HZVERSION) $(HZ)

install-js:
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)/lib
	cp $(LIB:%=lib/%) $(DESTDIR)$(HIPHOPLIBDIR)/lib
	cp lib/config.js $(DESTDIR)$(HIPHOPLIBDIR)/lib
	cp lib/hiphop.d.ts $(DESTDIR)$(HIPHOPLIBDIR)/lib
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor
	cp $(PREPROCESSOR:%=preprocessor/%) $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)/ulib
	cp $(ULIB:%=ulib/%) $(DESTDIR)$(HIPHOPLIBDIR)/ulib
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)/modules
	cp $(MODULES:%=modules/%) $(DESTDIR)$(HIPHOPLIBDIR)/modules
	cp package.json $(DESTDIR)$(HIPHOPLIBDIR)
	chmod -R a+rx $(DESTDIR)$(LIBDIR)/$(HZ)
	find $(DESTDIR)$(HIPHOPLIBDIR) -name '*.@SO@' -exec touch {} \;
	echo "Installation complete [$(DESTDIR)$(HIPHOPLIBDIR)]."

install-so:
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)/lib/$(SODIR)
	for p in $(LIB:%.js=%) config; do \
	   cp lib/$$p.@SO@ $(DESTDIR)$(HIPHOPLIBDIR)/lib/$(SODIR); \
        done
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)/ulib/$(SODIR)
	for p in $(ULIB:%.js=%); do \
	   cp ulib/$$p.@SO@ $(DESTDIR)$(HIPHOPLIBDIR)/ulib/$(SODIR); \
        done
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)/modules/$(SODIR)
	for p in $(MODULES:%.js=%); do \
	   cp modules/$$p.@SO@ $(DESTDIR)$(HIPHOPLIBDIR)/modules/$(SODIR); \
        done
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor/$(SODIR)
	for p in $(PREPROCESSOR:%.js=%); do \
	   cp preprocessor/$$p.@SO@ $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor/$(SODIR); \
        done
	chmod -R a+rx $(DESTDIR)$(LIBDIR)/$(HZ)

install-nodejs install-local:
	mkdir -p $$HOME/.node_modules
	rm -rf $$HOME/.node_modules/hiphop
	pwd=$$PWD; cd ..; cp -r $$pwd $$HOME/.node_modules/hiphop

install-sitelisp:
	mkdir -p $(DESTDIR)$(HOPSHAREDIR)/hiphop/site-lisp
	cp etc/hiphop.el $(DESTDIR)$(HOPSHAREDIR)/hiphop/site-lisp
	chmod -R a+rx $(DESTDIR)$(HOPSHAREDIR)/hiphop

uninstall:
	rm -rf $(DESTDIR)$(HIPHOPLIBDIR)

#*---------------------------------------------------------------------*/
#*    clean                                                            */
#*---------------------------------------------------------------------*/
clean-npm:
	rm -rf npm

clean: 
	rm -rf lib/*.so
	rm -rf ulib/*.so
	rm -rf modules/*.so
	rm -rf preprocessor/*.so

cleanall: clean
	rm -f config.status
	rm -f lib/config.js
	rm -rf arch/debian/debian
	rm -rf modules/node_modules/@hop/hiphop

distclean: cleanall

#*---------------------------------------------------------------------*/
#*    hz                                                               */
#*---------------------------------------------------------------------*/
.PHONY: distrib tgz hz $(HOPREPOSITORY)/$(HZ)-$(HZVERSION).tar.gz

distrib: hz
hz: tgz
tgz: $(HOPREPOSITORY)/$(HZ)-$(HZVERSION).tar.gz

$(HOPREPOSITORY)/$(HZ)-$(HZVERSION).tar.gz: \
  package.json \
  package-lock.json \
  modules \
  configure \
  Makefile.in Makefile \
  lib/config.js.in \
  lib/hiphop.d.ts \
  $(FILES) \
  LICENSE \
  arch \
  docker \
  etc \
  doc \
  .travis.yml.in \
  test \
  examples \
  tutorials \
  ChangeLog
	mkdir -p $(HOPREPOSITORY) && \
	(cd ..; \
	 cp -r $(HZ) $(HZ)-$(HZVERSION); \
         tar cfz $@ \
             --exclude='$(HZ)/private' \
             --exclude=.gitignore \
             --exclude=.git \
             --exclude=so \
             --exclude=arch/debian/build.$(HZ) \
             --exclude='*~' $(^:%=$(HZ)-$(HZVERSION)/%); \
         rm -rf $(HZ)-$(HZVERSION))

#*---------------------------------------------------------------------*/
#*    ChangeLog                                                        */
#*---------------------------------------------------------------------*/
ChangeLog:
	git log --pretty=format:"hiphop ($(HZVERSION)-1) unstable; urgency=low%n%n  * %s%n%n -- %an <%ae>  %cD%n" > ChangeLog
